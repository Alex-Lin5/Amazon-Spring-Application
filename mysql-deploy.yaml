apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-pv-volume # name of PV essential for identifying the storage data
  labels:
    app: mysql
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce   #This specifies the mode of the claim that we are trying to create.
  hostPath:
    path: /data/mysql

---
# Define a 'Persistent Volume Claim'(PVC) for Mysql Storage, dynamically provisioned by cluster
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim # name of PVC essential for identifying the storage data
  labels:
    app: mysql
    tier: database
spec:
  storageClassName: manual # ssd
  accessModes:
  - ReadWriteOnce   #This specifies the mode of the claim that we are trying to create.
  resources:
    requests:
      storage: 5Gi    #This will tell kubernetes about the amount of space we are trying to claim.
---
# Configure 'Deployment' of mysql server
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deploy
  labels:
    app: mysql
    tier: database
spec:
  replicas: 1
  selector: # mysql Pod Should contain same labels
    matchLabels:
      app: mysql
      tier: database
  strategy:
    type: Recreate
  template:
    metadata:
      labels: # Must match 'Service' and 'Deployment' selectors
        app: mysql
        tier: database
    spec:
      containers:
      - image: mysql:8.4 # image from docker-hub
#          args:
#            - "--ignore-db-dir=lost+found" # Workaround for https://github.com/docker-library/mysql/issues/186
        name: mysql
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: password
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:        # Mounting volume obtained from Persistent Volume Claim
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql #This is the path in the container on which the mounting will take place.
      volumes:
      - name: mysql-persistent-storage # Obtaining 'volume' from PVC
        persistentVolumeClaim:
          claimName: mysql-pv-claim
---
# Define a 'Service' To Expose mysql to Other Services
apiVersion: v1
kind: Service
metadata:
  name: mysql-svc  # DNS name
  labels: # mysql Pod Should contain same labels
    app: mysql
    tier: database
spec:
  ports:
  - protocol: TCP
    port: 3306
    targetPort: 3306
  selector:
    app: mysql
    tier: database
  clusterIP: None  # We Use DNS, Thus ClusterIP is not relevant
#  type: NodePort
#  type: ExternalName
#  externalName: my.database.host