apiVersion: apps/v1
kind: Deployment
metadata:
  name: onlineshopping-deploy
  labels:
    app: onlineshopping
spec:
  selector:
    matchLabels:
      app: onlineshopping
  replicas: 3
  template:
    metadata:
      labels:
        app: onlineshopping
    spec:
      containers:
        - name: onlineshopping-container
          image: tank73/onlineshopping:h1.0
#          image: 905418235901.dkr.ecr.us-east-2.amazonaws.com/onlineshopping
          ports:
            - containerPort: 9000
          env:   # Setting Enviornmental Variables
            - name: DB_HOST   # Setting Database host address from configmap
              valueFrom:
                configMapKeyRef:
                  name: mysql-configmap
                  key: host
            - name: DB_NAME  # Setting Database name from configmap
              valueFrom:
                configMapKeyRef:
                  name: mysql-configmap
                  key: name
            - name: DB_USERNAME  # Setting Database username from Secret
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: user
            - name: DB_PASSWORD # Setting Database password from Secret
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: password

---
apiVersion: v1 # Kubernetes API version
kind: Service # Kubernetes resource kind we are creating
metadata: # Metadata of the resource kind we are creating
  name: onlineshopping-svc
spec:
  selector:
    app: onlineshopping
  ports:
    - protocol: TCP
      port: 9000 # The port that the service is running on in the cluster
      targetPort: 9000 # The port exposed by the service
  type: LoadBalancer # type of the service.
#---
#apiVersion: v1
#kind: Pod
#metadata:
#  name: private-reg
#spec:
#  containers:
#    - name: private-reg-container
#      image: tank73/onlineshopping:h1.0
#  imagePullSecrets:
#    - name: docker-cred